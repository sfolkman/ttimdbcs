#!/bin/sh

setupdocker=0
while [ $# -gt 0 ]; do
case $1 in
-s|--setupdocker) setupdocker=1 ;;
esac
shift
done

sudo=""
id=$(id -u)
if [ ${id} -ne 0 ]; then
    sudo=sudo
fi

vols=$(ls /dev/nvme?n1 2>/dev/null)
if [ $? -ne 0 ]; then
   echo "mkvgs: no NVMe volumes found"
fi
echo ${vols}

vgname="vg00"
c=0
for dev in ${vols} ; do
  ${sudo} pvcreate -y -f ${dev}
  c=$(expr ${c} \+ 1)
done
${sudo} vgcreate ${vgname} ${vols}

if [ ${setupdocker} -gt 0 ]; then
  ${sudo} lvcreate -y --wipesignatures y -n thinpoolmeta ${vgname} -L 16G
  ${sudo} lvcreate -y --wipesignatures y -n thinpool ${vgname} -L 16g
  ${sudo} lvconvert -y --zero n -c 512K --thinpool ${vgname}/thinpool --poolmetadata ${vgname}/thinpoolmeta
# if want to enable extension
#  ${sudo}  cat > /etc/lvm/profile/docker-thinpool.profile <<EOF
#activation {
#    thin_pool_autoextend_threshold=80
#    thin_pool_autoextend_percent=20
#}
#EOF
# ${sudo} lvchange --metadataprofile thinpool ${vgname}/thinpool
#  ${sudo} mkdir -p /etc/docker /var/lib/docker
#  ${sudo} rm -rf /var/lib/docker/*
#
#  ${sudo} cat > /etc/docker/daemon.json <<EOF
#{
#     "storage-driver": "devicemapper",
#     "storage-opts": [
#         "dm.thinpooldev=/dev/mapper/${vgname}-thinpool",
#         "dm.use_deferred_removal=true"
#     ]
#}
#EOF
  ${sudo} sed -i -e 's/DOCKER_STORAGE_OPTIONS=/#DOCKER_STORAGE_OPTIONS=/' /etc/sysconfig/docker-storage

  echo "DOCKER_STORAGE_OPTIONS=--storage-driver=devicemapper --storage-opt=dm.thinpooldev=/dev/mapper/vg00-thinpool --storage-opt=dm.use_deferred_removal=true --storage-opt=dm.use_deferred_deletion=true" >> /etc/sysconfig/docker-storage

  ${sudo} systemctl enable docker.service
  ${sudo} systemctl daemon-reload
  ${sudo} systemctl start docker
fi

#${sudo} lvcreate --wipesignatures y -I 128K -i ${c} -n logs ${vgname} -L 100G
${sudo} lvcreate --wipesignatures y -I 128K -i ${c} -n databases ${vgname} -l+100%FREE

# monitor with this
#lvs -o+seg_monitor

${sudo} vgs
${sudo} lsblk
#journalctl -fu dm-event.service
${sudo} lvs -a

vgname="/dev/${vgname}"
${sudo} mkfs -T ext4 ${vgname}/databases
#${sudo} mkfs -T ext4 ${vgname}/logs
${sudo} mkdir -p /u01 # /u02
${sudo} mount ${vgname}/databases /u01
#${sudo} mount ${vgname}/logs /u02
${sudo} chown opc:opc /u01 #/u02
${sudo} chmod 775 /u01 #/u02
df -hm


